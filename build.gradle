buildscript {
	dependencies {
		classpath fileTree(dir: "lib", include: "*.jar")
	}
}

plugins {
	id "java-library"
	id "maven-publish"
}

group = "com.danawa.search"
version = "1.0.0"

sourceCompatibility = JavaVersion.VERSION_14
targetCompatibility = JavaVersion.VERSION_14
compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
	mavenCentral()
	mavenLocal()
}

sourceSets {
	main {
		java {
			srcDir "src/main/java"
			exclude "Tester.java"
		}
		resources {
			srcDir "src/main/resources"
			exclude "**/**"
		}
	}
	test {
		java {
			srcDir "src/test/java"
		}
	}
}

compileJava {
	options.incremental = true
	options.fork = true
	options.failOnError = false
}

dependencies {
	testImplementation (
		[group: 'junit', name: 'junit', version: '4.1+', transitive: true]
	)
	implementation (
		[group: "commons-io", name: "commons-io", version: "1.3.2"],
		[group: "org.elasticsearch", name: "elasticsearch", version: "7.8.1"],
		[group: "org.apache.logging.log4j", name: "log4j-core", version: "2.11.1"],
		[group: "org.json", name: "json", version: "2019+"],
	)
}

task copyToDependencies(type: Copy) {
	from (configurations.runtimeClasspath) {
		include "json-*", "slf4j-api*"
	}
	from ("src/main/resources") {
		include "*.properties"
		include "*.policy"
		include "*.yml"
	}
	into "${buildDir}/libs"
}

task copyJars(type: Copy) {
	dependsOn(jar)
	dependsOn(copyToDependencies)
	from (configurations.runtimeClasspath) {
		include "*.jar"
	}
	from(jar.archivePath) {
		include "*.jar"
	}
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	into "${buildDir}/jars"
}

test { }

build.dependsOn(copyToDependencies, copyJars)